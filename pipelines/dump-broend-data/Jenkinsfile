#!groovyâ€‹
@Library('pu-deploy')_

properties([
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '10')),
        pipelineTriggers([]),
        disableConcurrentBuilds()
])

def FILE = "dk5_broend_total.iso2709"

pipeline {
    agent {
        docker {
            image "docker.dbc.dk/dbc-broend-env-689-dump-broend-data:2"
            label 'devel10-head'
        }
    }
    triggers {
        cron("H 5 * * *")
    }
    environment {
        ARTIFACTORY_FE_GENERIC = "https://artifactory.dbc.dk/artifactory/fe-generic/dk5/"
        ARTIFACTORY_LOGIN = credentials("artifactory_login")
        TANTER_LOGIN = credentials("tanter_login")
    }

    stages {
        stage('Dump DK5') {
            steps {
                script {
//                        insert the line below in sh part when dk5 is migrated
//                        /root/.rrdump/bin/rrdump.sh -m EXPANDED -f ISO -s ACTIVE -a 190007 -e DANMARC2 -u http://rawrepo-record-service.cisterne.svc.cloud.dbc.dk/ -o $FILE
                    sh """
                        pwd
                        ls -l
                        /home/isworker/.rrdump/bin/rrdump.sh -m EXPANDED -f ISO -s ACTIVE -a 190007 -e DANMARC2 -u http://rawrepo-record-service.basismig.svc.cloud.dbc.dk -o $FILE 
                    """
                }
            }
        }
        stage('Send file to Artifactory') {
            when {
                branch "master"
            }
            steps {
                script {
                    sh "echo archive ${FILE}"
                    archiveArtifacts "${FILE}"
                    sh "echo push to ${ARTIFACTORY_FE_GENERIC}${FILE}"
                    sh "curl -k -u ${ARTIFACTORY_LOGIN} -T ${FILE} ${ARTIFACTORY_FE_GENERIC}${FILE}"
                }
            }
        }
    }
    post {
        failure {
            script {
                if ("${env.BRANCH_NAME}" == 'master') {
                    slackSend(channel: 'fe-drift',
                            color: 'warning',
                            message: "${env.JOB_NAME} #${env.BUILD_NUMBER} failed and needs attention: ${env.BUILD_URL}",
                            tokenCredentialId: 'slack-global-integration-token')
                }
            }
        }
        success {
            script {
                if ("${env.BRANCH_NAME}" == 'master') {
                    slackSend(channel: 'fe-drift',
                            color: 'good',
                            message: "${env.JOB_NAME} #${env.BUILD_NUMBER} completed, and pushed ${FILE} to ${ARTIFACTORY_FE_GENERIC}",
                            tokenCredentialId: 'slack-global-integration-token')
                }
            }
        }
        fixed {
            slackSend(channel: 'fe-drift',
                    color: 'good',
                    message: "${env.JOB_NAME} #${env.BUILD_NUMBER} back to normal: ${env.BUILD_URL}",
                    tokenCredentialId: 'slack-global-integration-token')

        }
    }
}